// Generated by @wagmi/cli@0.1.15 on 5/5/2023 at 4:03:25 PM
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
  Address,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EnsRegistry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export const ensRegistryABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'decimals_', internalType: 'uint8', type: 'uint8' },
      { name: 'totalSupply_', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Burn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Mint',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'minter', internalType: 'address', type: 'address' }],
    name: 'addMinter',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'minter', internalType: 'address', type: 'address' }],
    name: 'removeMinter',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'feeAddress', internalType: 'address', type: 'address' }],
    name: 'setFeeAddress',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'burnAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferAndBurn',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export const ensRegistryAddress = {
  5: '0x31D20C015AFDF3909Bc2E1369909D041d2c323BB',
} as const

/**
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export const ensRegistryConfig = {
  address: ensRegistryAddress,
  abi: ensRegistryABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: erc20ABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi'
  > = {} as any,
) {
  return useContractRead({ abi: erc20ABI, ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"allowance"`.
 */
export function useErc20Allowance<
  TSelectData = ReadContractResult<typeof erc20ABI, 'allowance'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'allowance', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'allowance', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc20BalanceOf<
  TSelectData = ReadContractResult<typeof erc20ABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'balanceOf', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decimals"`.
 */
export function useErc20Decimals<
  TSelectData = ReadContractResult<typeof erc20ABI, 'decimals'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'decimals', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'decimals', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"name"`.
 */
export function useErc20Name<
  TSelectData = ReadContractResult<typeof erc20ABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'name', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc20Symbol<
  TSelectData = ReadContractResult<typeof erc20ABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'symbol', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc20TotalSupply<
  TSelectData = ReadContractResult<typeof erc20ABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'totalSupply', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'totalSupply', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Write<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, string>['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<TMode, typeof erc20ABI, TFunctionName> & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, TFunctionName>({
    abi: erc20ABI,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc20Approve<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'approve'>['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'approve'> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'approve'>({
    abi: erc20ABI,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function useErc20Transfer<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'transfer'>['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transfer'> & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transfer'>({
    abi: erc20ABI,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc20TransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transferFrom'> & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transferFrom'>({
    abi: erc20ABI,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function usePrepareErc20Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>,
    'abi'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc20Approve(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareErc20Transfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc20TransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, TEventName>,
    'abi'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc20ApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, 'Approval'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc20TransferEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, 'Transfer'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistry(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any,
) {
  return useContract({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof ensRegistryABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"allowance"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryAllowance<
  TSelectData = ReadContractResult<typeof ensRegistryABI, 'allowance'>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, 'allowance', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'allowance', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryBalanceOf<
  TSelectData = ReadContractResult<typeof ensRegistryABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"decimals"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryDecimals<
  TSelectData = ReadContractResult<typeof ensRegistryABI, 'decimals'>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, 'decimals', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'decimals', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryName<
  TSelectData = ReadContractResult<typeof ensRegistryABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryOwner<
  TSelectData = ReadContractResult<typeof ensRegistryABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistrySymbol<
  TSelectData = ReadContractResult<typeof ensRegistryABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryTotalSupply<
  TSelectData = ReadContractResult<typeof ensRegistryABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof ensRegistryABI, 'totalSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'totalSupply', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof ensRegistryABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, TFunctionName>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"addMinter"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryAddMinter<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof ensRegistryABI, 'addMinter'>['abi'],
        'addMinter'
      > & { address?: Address; chainId?: TChainId; functionName?: 'addMinter' }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'addMinter'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'addMinter'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'addMinter'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'addMinter',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof ensRegistryABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'approve'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryBurn<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof ensRegistryABI, 'burn'>['abi'],
        'burn'
      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'burn'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'burn'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"decreaseAllowance"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryDecreaseAllowance<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'decreaseAllowance'
      }
    : UseContractWriteConfig<
        TMode,
        typeof ensRegistryABI,
        'decreaseAllowance'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'decreaseAllowance'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"increaseAllowance"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryIncreaseAllowance<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'increaseAllowance'
      }
    : UseContractWriteConfig<
        TMode,
        typeof ensRegistryABI,
        'increaseAllowance'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'increaseAllowance'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof ensRegistryABI, 'mint'>['abi'],
        'mint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'mint'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'mint'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"removeMinter"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryRemoveMinter<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'removeMinter'
        >['abi'],
        'removeMinter'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'removeMinter'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'removeMinter'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'removeMinter'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'removeMinter'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'removeMinter',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'renounceOwnership'
        >['abi'],
        'renounceOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof ensRegistryABI,
        'renounceOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'renounceOwnership'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setFeeAddress"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistrySetFeeAddress<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'setFeeAddress'
        >['abi'],
        'setFeeAddress'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setFeeAddress'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setFeeAddress'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setFeeAddress'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'setFeeAddress'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'setFeeAddress',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transfer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryTransfer<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof ensRegistryABI, 'transfer'>['abi'],
        'transfer'
      > & { address?: Address; chainId?: TChainId; functionName?: 'transfer' }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'transfer'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'transfer'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transferAndBurn"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryTransferAndBurn<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'transferAndBurn'
        >['abi'],
        'transferAndBurn'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferAndBurn'
      }
    : UseContractWriteConfig<
        TMode,
        typeof ensRegistryABI,
        'transferAndBurn'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferAndBurn'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'transferAndBurn'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transferAndBurn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'transferFrom'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ensRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof ensRegistryABI,
          'transferOwnership'
        >['abi'],
        'transferOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof ensRegistryABI,
        'transferOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof ensRegistryABI, 'transferOwnership'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"addMinter"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryAddMinter(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'addMinter'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'addMinter',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'addMinter'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'burn'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"decreaseAllowance"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'decreaseAllowance'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof ensRegistryABI,
    'decreaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"increaseAllowance"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'increaseAllowance'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof ensRegistryABI,
    'increaseAllowance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'mint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"removeMinter"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryRemoveMinter(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'removeMinter'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'removeMinter',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'removeMinter'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof ensRegistryABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setFeeAddress"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistrySetFeeAddress(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setFeeAddress'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'setFeeAddress',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setFeeAddress'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transfer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'transfer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'transfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transferAndBurn"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryTransferAndBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'transferAndBurn'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transferAndBurn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'transferAndBurn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function usePrepareEnsRegistryTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof ensRegistryABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof ensRegistryABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof ensRegistryABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof ensRegistryABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"Burn"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryBurnEvent(
  config: Omit<
    UseContractEventConfig<typeof ensRegistryABI, 'Burn'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    eventName: 'Burn',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'Burn'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"Mint"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryMintEvent(
  config: Omit<
    UseContractEventConfig<typeof ensRegistryABI, 'Mint'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    eventName: 'Mint',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'Mint'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof ensRegistryABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x31D20C015AFDF3909Bc2E1369909D041d2c323BB)
 */
export function useEnsRegistryTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof ensRegistryABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof ensRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[5],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'Transfer'>)
}
